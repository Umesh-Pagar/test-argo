{{- if and (.Values.externalSecrets) (.Values.externalSecrets.enable) -}}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: eso-config-{{ .Values.env }}
  namespace: {{ .Values.namespace }}
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - list:
      elements:
      {{- range .Values.clusters }}
      - cluster: {{ .name }}
        url: {{ .url }}
        provider: {{ .provider }}
      {{- end }} 
  template:
    metadata:
      name: '{{`{{.cluster}}`}}-eso-config'
    spec:
      project: default
      source:
        repoURL: {{ .Values.repoUrl }}
        path: cluster-addons/add-ons/eso-config
        targetRevision: {{ .Values.targetRevision }}
        helm:
          values: |
            provider: '{{`{{provider}}`}}'
            name: {{ $.Values.externalSecrets.serviceAccountName }}
            namespace: {{ $.Values.externalSecrets.serviceAccountNamespace }}
            azure:
              clientId: {{ $.Values.externalSecrets.azure.clientId }}
              tenantId: {{ $.Values.externalSecrets.azure.tenantId }}
              keyVaultUrl: {{ $.Values.externalSecrets.azure.keyVaultUrl }}
            aws:
              accountId: {{ $.Values.externalSecrets.aws.accountId }}
              roleArn: {{ $.Values.externalSecrets.aws.roleArn }}
              region: {{ $.Values.externalSecrets.aws.region }}
      destination:
        server: '{{`{{.url}}`}}'
        namespace: {{ $.Values.externalSecrets.namespace }}
      syncPolicy:
        automated:
          prune: true
      retry:
        limit: 1
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 1m
{{- end -}}